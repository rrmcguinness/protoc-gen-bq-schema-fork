# Copyright 2014 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("@gazelle//:def.bzl", "gazelle")
load("@rules_go//go:def.bzl", "go_binary", "go_library")
load("@rules_pkg//pkg/private/zip:zip.bzl", "pkg_zip")
load("@rules_proto_grpc//:defs.bzl", "proto_plugin")

package(default_visibility = ["//:__subpackages__"])

VERSION = "1.2.0"

gazelle(name = "gazelle")

go_library(
    name = "protoc-gen-bq-schema_lib",
    srcs = ["main.go"],
    importpath = "github.com/GoogleCloudPlatform/protoc-gen-bq-schema/v3",
    deps = [
        "//internal/converter",
        "@com_github_golang_glog//:glog",
        "@org_golang_google_protobuf//proto",
        "@org_golang_google_protobuf//types/pluginpb",
    ],
)

go_binary(
    name = "protoc_gen_bq_schema",
    out = "protoc-gen-bq-schema",
    embed = [":protoc-gen-bq-schema_lib"],
    visibility = ["//visibility:public"],
)

proto_plugin(
    name = "bq-schema",
    options = ["ignorePrefix=true"],
    output_directory = True,
    quirks = [
        "QUIRK_DIRECT_MODE",
    ],
    tool = ":protoc_gen_bq_schema",
    visibility = ["//visibility:public"],
)

pkg_zip(
    name = "protoc_gen_bq_schema_src",
    srcs = glob(
        [
            "api/*",
            "docs/**/*",
            "internal/**/*",
            "test/*.go",
        ] + [
            "main.go",
            "BUILD.bazel",
            "LICENSE",
            "NOTICE",
            "WORKSPACE",
            "README.md",
            "go.mod",
        ],
        allow_empty = True,
    ),
    out = "protoc_gen_bq_schema-v%s-src.zip" % VERSION,
)

pkg_zip(
    name = "protoc_gen_bq_schema_zip",
    srcs = [
        "LICENSE",
        "NOTICE",
        "README.md",
        ":protoc_gen_bq_schema",
    ],
    out = "protoc_gen_bq_schema-v%s.zip" % VERSION,
)
